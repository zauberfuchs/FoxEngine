/*
 *
 * Copyright (C) <2014> <w-hs - cglab projects>
 * All rights reserved.
 *
 * This software may be modified and distributed under the terms
 * of the BSD license.  See the LICENSE file for details.
 */

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#ifndef __CG221_COMPILERPRE_H__
#define __CG221_COMPILERPRE_H__


//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#if defined _WIN32 || defined _WIN64

	
	#if defined CG221_DLL_LIBRARY
		#if defined _WIN32 || defined _WIN64
			#define CG221_API __declspec(dllexport)
		#else
			#define CG221_API __declspec(dllimport)
		#endif	
	#else
		#define CG221_API
	#endif

#else
	#ifndef CG221_API
		#define CG221_API
	#endif
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#ifdef __APPLE__
#undef WIN32
#undef _WIN32
#define MACOSX
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <string.h>
#include <time.h>
#include <stdarg.h>

#include <new>
#include <iterator>
#include <deque>
#include <queue>
#include <list>
#include <map>
#include <vector>
#include <sstream>
#include <iostream>
#include <sstream>
#include <string>
#include <memory>
#include <thread>
#include <chrono>
#include <mutex>
#include <locale>

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#include "Types.h"

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#if (_MSC_VER > 1000)
	#pragma once
#endif

#if defined(WIN32) || defined(_WIN32) || defined(_WIN64) || defined(_XBOX)
	// Warnung:C4290: C++-Ausnahmespezifikation ignoriert, es sei denn, es wird angezeigt, dass eine Funktion nicht __declspec(nothrow) ist
	#pragma warning (disable : 4290)
	// warning LNK4098: defaultlib
	#pragma warning (disable : 4098)
	// disable: "<type> needs to have dll-interface to be used by clients'
	// Happens on STL member variables which are not public therefore is ok
	#pragma warning (disable : 4251)
	// Turn off warnings generated by long std templates
	// This warns about truncation to 255 characters in debug/browse info
	#pragma warning (disable : 4786)
	// The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
	#pragma warning (disable : 4996)
	// convert int to bool
	#pragma warning (disable : 4800)
	// deprecated
	#pragma warning (disable : 4996)
	// atgument truncated
	#pragma warning (disable : 4305)
	// size_t
	#pragma warning (disable : 4267)
	//  warning C4661: 'CG221::Logger *CG221::Singleton<T>::ms_Singleton' : no suitable definition provided for explicit template instantiation request
	#pragma warning (disable : 4661)


	#ifndef _CRT_SECURE_NO_DEPRECATE
		#define _CRT_SECURE_NO_DEPRECATE
	#endif

	#ifndef _CRT_NONSTDC_NO_DEPRECATE
		#define _CRT_NONSTDC_NO_DEPRECATE
	#endif

	#ifndef _CRT_SECURE_NO_WARNINGS
		#define _CRT_SECURE_NO_WARNINGS
	#endif

#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#ifdef _XBOX
#include <xtl.h>
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////
//
#if defined _WIN64 || defined _WIN32
	#ifndef NOMINMAX
		#define NOMINMAX
	#endif
	#define _WINSOCKAPI_

	#ifndef _XBOX
		#define WINDOWS_LEAN_AND_MEAN
		//#include <windows.h>
		//#include <process.h>    /* _beginthread, _endthread */
		#include <WinSock2.h>
		#include <ws2tcpip.h>
	#else
		#include <XTL.h>
		#include <winsockx.h>
	#endif
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#if (_MSC_VER>=1000)
	#define CG221_INLINE __forceinline	//alternative is simple inline
	#pragma inline_depth( 255 )
	#pragma intrinsic(memcmp)
	#pragma intrinsic(memcpy)
	#pragma intrinsic(memset)
	#pragma intrinsic(strcat)
	#pragma intrinsic(strcmp)
	#pragma intrinsic(strcpy)
	#pragma intrinsic(strlen)
	#pragma intrinsic(abs)
	#pragma intrinsic(labs)
#else
	#define CG221_INLINE inline
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#define CG221_DELETE(x) { delete x; x = NULL; }
#define CG221_DELETE_SINGLE(x) if (x) { delete x; x = NULL; }
#define CG221_DELETE_ARRAY(x) if (x) { delete []x; x = NULL; }

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

template<class Type>
CG221_INLINE void CG221_Swap(Type& a, Type& b)
{
	const Type c = a;
	a = b;
	b = c;
}


//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#ifndef CG221_ASSERT
#define CG221_ASSERT(x) assert(x)
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#ifndef SAFE_DELETE
#define SAFE_DELETE(x) { if ((x) != NULL) { delete(x); (x)=NULL; } }
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#if defined(__GNUC__) || defined(__gnu_linux__)

#include <pthread.h>

/* Defines for some windows function that have a different name in Linux */
#define _snprintf snprintf
#define strnicmp strncasecmp
#define stricmp strcasecmp

#endif

#if __STDC_VERSION__ < 199901L
#if __GNUC__ >= 2
#define __func__ __FUNCTION__
#else
#define __func__ "<unknown>"
#endif
#endif

//////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////

#endif //__COMPILERPRE_H__
